2012 - 02 - 21
    BModel.php : deleted protected functions package() & unpack()
    BPiece.php : DEPRECATED, deleted
    PieceDB.sql: created basiin_transaction & basiin_transfer tables
                 applying foreign keys & behaviors
    PieceDB.sql -> Basiin.db.sql
    BModel.php : redundant, deleted
    BTransaction separating db data from data taken directly from the 
                 Basiin static object

2012 - 02 -22
    Basiin.db.sql:  keep working
    init.js:        Decided to make basiin a non touchdown object (no var
                    references it). Plugins and user code will be incorporated
                    into the generated object, this way everyone can call every
                    other's public api. Comms will be taken up as functions
                    returned by the script tags. 
                    Function names will be autogenerated hash values by the
                    framework. Transfer & Transaction ids are numeric values
                    created by the servers now.
                    Example: User code calls:
                        tell/transactionId/transferId/responseVar/data
                             Server returns script:
                        var responseVar = function(){
                            //the code that will be executed by the basiin obj
                        }
                             once the onload event fires basiin will execute
                             that var in it's internal context, having access
                             to all functionality and extensibility. After the
                             response is executed the variable is unset.
                             Care has to be put on hash tag creation, the
                             variable can't exists beforehand.
                        after Transfer has send all pieces it asks Basiin server
                        for confirmation:
                        tell/complete/transactionId/transferId/responseVar

2012 - 02 - 23
    Transaction.php:created
    Transfer.php:   created
    Pieces.php:     created

    manyfiles:      movet AR classes to BFiles adn BClasses, deleted old Bs
    basiin.php:     Debug behavior now is controlled by Basiin::DEBUG

    basiin.php:     shut down doesn't autosave all transactions, it would be
                    overkill. Instead from now on save each transaction on
                    controller.

    basiin.php:     handles instantiation of Transactions
    BTransaction.php:instances handle instantiation of their BTransfers
    BTransfer.php:  instances also create a BPiece on creation;

    working on BTransfer::onBeforeSave

2012 - 02 -27
    BTransaction.php:workaround for onAfterCreate
    initController: now works with the AR transactions
    init.js:        updating to no touchdown model
    Transfer.js:    updating to the three stage transfer model.
    init.js:        added _varHash function (generate randomized valid varnames)


2012 - 02 - 29
    init.js*:       all js files that extend must be in the form of a closure
                    var $file = (function(args{return {interface} }))()
    init.File.js:   created & completed (File object is fully functional)

TODO: transaction cleanup on max
      transaction cleanup on interval
      same for transfers
      prettyfy init.elements.js (it is just an object now)
      prettyfy init.Transfer.js  (I think init.File.js has a good layout, try it)

NOTE: use:
        sed -i -r 's/(.{startindex})0{,packetLength}(.*)/\1`packetData`\2/' tempFile
      for writing data to the incoming file. use echo 'zeros' >> to pad a file

2012 - 03 - 07
    Jay! Working again!!!
    _loader.transfer:   now recognizes encodeData=false flag.
    append.sh:           complete(ish) should do more testing?


2012 - 03 - 12
    init.Transfer.js:   working on Timer & append.sh

2012 - 03 - 14
    cleaning up TODO

2012 - 03 - 15
    init.Transfer.js:   added _activeElements and implemented transfer send,
                        load and error events on it.
                        Made transfer timeouts to actually kill the transfer by
                        not returning packets via getPacket() after timeout
    init.js:            adding events & timeout facility
    append.sh:          The problem with the size inconsistencies might be
                        because of wrong invocation of echo. It should be
                            echo -ne "$data" NOT echo -n "$data"

2012 - 03 - 16
    DONE:               create some type of protocol for what a Packet response
                        should be, the current template isn't working well

    NOTE:               Events implementation is completely wrong.
    DONE:               Events implementation is now a prototype obj that other
                        objs have as prototype

    DONE:               create the LoaderObject prototype class, from which
                        File,Transfer & Packet will inherit (events).
                        create the BasiinObject class from which _loader,
                        _elements & LoaderObject will inherit (events)

    DONE:               after fixing the File object to use the new obj proto
                        also fix: Transfer, Packet, _element & _loader


2012 - 03 - 21
    init.Transfer.js    Completed the transfer procedure, all seems to be 
                        working now
    TranferController   receive now works with out of order packets, packets are
                        deposited as .packet{int} files and are merged on
                        successful finalize
    init objects        changing the way the even system is prototyped, in the
                        current implementation the event object is global
                        amongst all same objects and since I can't figure out
                        how to correctly segment each object's event space it is
                        a better idea to have completely separate event objects.
    BOP:                new event subsystem now you can call event() but also
                        modify the events through: event.add(o,f) or see registered 
                        events via event.events()
    Transfer:           Tested validation, when the server returns missing
                        packets on Finalize basiin will resend them without 
                        errors.

2012 - 03 - 26
    TODO:               Create transaction timeout timer for client side
    TODO:               Make the event system events appendable, either via
                        making the specific events arrays of functions or via
                        wrapping of the previous function on the appended one

2012 - 03 - 29
    Bassin.php:         Added Icon and script(file) folders
    BTransaction:       Moved js:_transaction.server in init.js to php side
                        now _transaction.server is populated by 
                        BTransaction->getServerPaths().

2012 - 04 - 03
    TODO:               add a styles obj to gui that makes functions out of style data
